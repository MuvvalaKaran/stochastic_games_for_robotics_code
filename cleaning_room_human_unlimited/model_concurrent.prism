smg

player r1
  robot
endplayer

player h1
  human
endplayer

global robotTurn : [0..1] init 0;

global o1 : [0..1] init 0;

module robot
	rloc : [0..2] init 0;

    [] rloc=0 & robotTurn=1 -> (rloc'=0) & (robotTurn'=0); // stay at 0
    [] rloc=0 & robotTurn=1 -> (rloc'=1) & (robotTurn'=0); // move to 1

    [] rloc=1 & robotTurn=1 -> (rloc'=0) & (robotTurn'=0); // move to 0
    [] rloc=1 & robotTurn=1 -> (rloc'=1) & (robotTurn'=0); // stay at 1
    [] rloc=1 & robotTurn=1 -> (rloc'=2) & (robotTurn'=0); // move to 2
    //[] rloc=1 & o1=1 & robotTurn=1 -> (rloc'=1) & (o1'=0) & (robotTurn'=0);
    
    [] rloc=2 & robotTurn=1 -> (rloc'=2) & (robotTurn'=0); // stay at terminal state

endmodule

module human
	hloc : [0..2] init 0;

    [] hloc=0 & robotTurn=0 -> (hloc'=0) & (robotTurn'=1); // stay at 0
    [] hloc=0 & robotTurn=0 -> (hloc'=1) & (robotTurn'=1); // move to 1

    [] hloc=1 & robotTurn=0 -> (hloc'=0) & (robotTurn'=1); // move to 0
    [] hloc=1 & robotTurn=0 -> (hloc'=1) & (robotTurn'=1); // stay at 1
    [] hloc=1 & robotTurn=0 -> (hloc'=2) & (robotTurn'=1); // move to 2
    //[] hloc=1 & o1=0 & robotTurn=0 -> (hloc'=1) & (o1'=1) & (robotTurn'=1);
    
    [] hloc=2 & robotTurn=0 -> (hloc'=2) & (robotTurn'=1); // stay at terminal state
endmodule

label "goal1" = (rloc=2);// & (hloc=2);// & (o1=0);
label "goal2" = (hloc=2);// & (o1=0);

